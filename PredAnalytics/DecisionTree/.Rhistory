data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
#Convert class num to label
data$glass_name <- "NULL"
data[data$glass == 1,]$glass_name <- "building_windows_float_processed"
data[data$glass == 2,]$glass_name <- "building_windows_non_float_processed"
data[data$glass == 3,]$glass_name <- "vehicle_windows_float_processed"
data[data$glass == 4,]$glass_name <- "vehicle_windows_non_float_processed"
data[data$glass == 5,]$glass_name <- "containers"
data[data$glass == 6,]$glass_name <- "tableware"
data[data$glass == 7,]$glass_name <- "headlamps"
#Drop ID and the class number before we changed it
data$ID <- NULL
data$glass <- NULL
#Train/Test Split
n <- dim(data)[1]
t1 <- sample(1:n, n*.8)
t2 <- setdiff(1:n, t1)
train <- subset(data[t1,])
test <- subset(data[t2,], select =- glass_name)
### 1. BASIC ###
fitControl <- trainControl(method='cv', number=10)
Grid <- expand.grid(cp=seq(0,0.1, 0.005))
#Run the training, needed to remove NAs
trained_tree <- train(glass_name ~ ., data=train, method='rpart',
trControl=fitControl, metric='Accuracy', maximize=TRUE, tuneGrid=Grid)
trained_tree
final_tree <- predict(trained_tree, test, type="raw")
confusionMatrix(final_tree, data[test,]$glass_name)
data[t2,]
confusionMatrix(final_tree, data[t2,]$glass_name)
t2
data[t2,]
confusionMatrix(final_tree, data[t2,c(1:9)]$glass_name)
data[t2,c(1:9)]
data[t2,c(1:9),]
data[t2,c(1:9),]$glass_name
typeof(test)
typeof(t2)
typeof(data)
test
confusionMatrix(final_tree, data[test,]$glass_name)
library(rpart)
library(caret)
data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
#Convert class num to label
data$glass_name <- "NULL"
data[data$glass == 1,]$glass_name <- "building_windows_float_processed"
data[data$glass == 2,]$glass_name <- "building_windows_non_float_processed"
data[data$glass == 3,]$glass_name <- "vehicle_windows_float_processed"
data[data$glass == 4,]$glass_name <- "vehicle_windows_non_float_processed"
data[data$glass == 5,]$glass_name <- "containers"
data[data$glass == 6,]$glass_name <- "tableware"
data[data$glass == 7,]$glass_name <- "headlamps"
#Drop ID and the class number before we changed it
data$ID <- NULL
data$glass <- NULL
#Train/Test Split
n <- dim(data)[1]
t1 <- sample(1:n, n*.8)
t2 <- setdiff(1:n, t1)
train <- subset(data[t1,])
test <- subset(data[t2,], select =- glass_name)
data[test,]
data[t2,]
confusionMatrix(final_tree, data[t2,]$glass_name)
library(rpart)
library(caret)
data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
#Convert class num to label
data$glass_name <- "NULL"
data[data$glass == 1,]$glass_name <- "building_windows_float_processed"
data[data$glass == 2,]$glass_name <- "building_windows_non_float_processed"
data[data$glass == 3,]$glass_name <- "vehicle_windows_float_processed"
data[data$glass == 4,]$glass_name <- "vehicle_windows_non_float_processed"
data[data$glass == 5,]$glass_name <- "containers"
data[data$glass == 6,]$glass_name <- "tableware"
data[data$glass == 7,]$glass_name <- "headlamps"
#Drop ID and the class number before we changed it
data$ID <- NULL
data$glass <- NULL
#Train/Test Split
n <- dim(data)[1]
t1 <- sample(1:n, n*.8)
t2 <- setdiff(1:n, t1)
train <- subset(data[t1,])
test <- subset(data[t2,], select =- glass_name)
### 1. BASIC ###
fitControl <- trainControl(method='cv', number=10)
Grid <- expand.grid(cp=seq(0,0.1, 0.005))
#Run the training, needed to remove NAs
trained_tree <- train(glass_name ~ ., data=train, method='rpart',
trControl=fitControl, metric='Accuracy', maximize=TRUE, tuneGrid=Grid)
trained_tree
final_tree <- predict(trained_tree, test, type="raw")
confusionMatrix(final_tree, data[t2,]$glass_name)
dim(data)
dim(t2)
t2
dim(data[c(t2),])
confusionMatrix(final_tree, data[c(t2),]$glass_name)
data[c(t2),]
data[c(t2),]$glass_name
final_tree
dim(final_tree)
length(final_tree)
final_tree[1]
Grid <- expand.grid(cp=seq(0,0.1, 0.005))
#Run the training, needed to remove NAs
trained_tree <- train(glass_name ~ ., data=train, method='rpart',
trControl=fitControl, metric='Accuracy', maximize=TRUE, tuneGrid=Grid)
trained_tree
final_tree <- predict(trained_tree, test, type="raw")
confusionMatrix(final_tree, data[c(t2),]$glass_name)
final_tree
data[t2,]
data[t2,]$glass_name
confusionMatrix(final_tree, data[t2,]$glass_name)
table(final_tree)
table(final_tree, data[t2,]$glass_name)
confusionMatrix(table(final_tree, data[t2,]$glass_name))
install.packages("RGtk2")
install.packages("RGtk2")
install.packages("magrittr")
install.packages("rattle", repos="http://rattle.togaware.com", type="source")
rpart.plot::rpart.plot(final_tree)
rpart.plot::rpart.plot(train_tree)
rpart.plot::rpart.plot(trained_tree)
typeof(trained_tree)
install.packages("rattle", dependencies = T)
library(rattle)
install.packages("rattle", dependencies = T)
library(rattle)
plot(trained_tree)
library(rpart)
library(caret)
data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
#Convert class num to label
data$glass_name <- "NULL"
data[data$glass == 1,]$glass_name <- "building_windows_float_processed"
data[data$glass == 2,]$glass_name <- "building_windows_non_float_processed"
data[data$glass == 3,]$glass_name <- "vehicle_windows_float_processed"
data[data$glass == 4,]$glass_name <- "vehicle_windows_non_float_processed"
data[data$glass == 5,]$glass_name <- "containers"
data[data$glass == 6,]$glass_name <- "tableware"
data[data$glass == 7,]$glass_name <- "headlamps"
#Drop ID and the class number before we changed it
data$ID <- NULL
data$glass <- NULL
#Train/Test Split
n <- dim(data)[1]
t1 <- sample(1:n, n*.8)
t2 <- setdiff(1:n, t1)
train <- subset(data[t1,])
test <- subset(data[t2,], select =- glass_name)
### 1. BASIC ###
fitControl <- trainControl(method='cv', number=10)
Grid <- expand.grid(cp=seq(0,0.1, 0.005))
#Run the training, needed to remove NAs
trained_tree <- train(glass_name ~ ., data=train, method='rpart',
trControl=fitControl, metric='Accuracy', maximize=TRUE, tuneGrid=Grid)
trained_tree
final_tree <- predict(trained_tree, test, type="raw")
confusionMatrix(table(final_tree, data[t2,]$glass_name))
plot(trained_tree)
### 2. Bagging functino ###
plot(final_tree)
plot(trained_tree)
?rpart
train
temp <- rpart.control(xval=10, minbucket = 2, minsplit = 4, cp = 0)
dfit <- rpart(glass_name ~ ., data=train, control=temp)
rpart.plot::rpart.plot(rpartTree)
rpart.plot::rpart.plot(dfit)
library(rpart)
library(caret)
data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
#Convert class num to label
data$glass_name <- "NULL"
data[data$glass == 1,]$glass_name <- "building_windows_float_processed"
data[data$glass == 2,]$glass_name <- "building_windows_non_float_processed"
data[data$glass == 3,]$glass_name <- "vehicle_windows_float_processed"
data[data$glass == 4,]$glass_name <- "vehicle_windows_non_float_processed"
data[data$glass == 5,]$glass_name <- "containers"
data[data$glass == 6,]$glass_name <- "tableware"
data[data$glass == 7,]$glass_name <- "headlamps"
#Drop ID and the class number before we changed it
data$ID <- NULL
data$glass <- NULL
#Train/Test Split
n <- dim(data)[1]
t1 <- sample(1:n, n*.8)
t2 <- setdiff(1:n, t1)
train <- subset(data[t1,])
test <- subset(data[t2,], select =- glass_name)
temp <- rpart.control(xval=10, minbucket = 2, minsplit = 4, cp = 0)
print(temp)
pred <- predict(trained_tree, test, type="raw")
confusionMatrix(table(pred, data[t2,]$glass_name))
plot(pred)
trained_tree
dfit <- rpart(glass_name ~ ., data=train, control=temp, cp=trained_tree)
rpart.plot::rpart.plot(dfit)
### 2. Bagging functino ###
library(ipred)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=10)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=4)
train
glass_name
train$glass_name
### 2. Bagging functino ###
library(ipred)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=4)
typeof(train$glass_name)
typeof(as.factor(train$glass_name))
train$glass_name <- as.factor(train$glass_name))
train$glass_name <- as.factor(train$glass_name)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=4)
library(rpart)
library(caret)
data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
#Convert class num to label
data$glass_name <- "NULL"
data[data$glass == 1,]$glass_name <- "building_windows_float_processed"
data[data$glass == 2,]$glass_name <- "building_windows_non_float_processed"
data[data$glass == 3,]$glass_name <- "vehicle_windows_float_processed"
data[data$glass == 4,]$glass_name <- "vehicle_windows_non_float_processed"
data[data$glass == 5,]$glass_name <- "containers"
data[data$glass == 6,]$glass_name <- "tableware"
data[data$glass == 7,]$glass_name <- "headlamps"
data$glass_name <- as.factor(data$glass_name)
#Drop ID and the class number before we changed it
data$ID <- NULL
data$glass <- NULL
#Train/Test Split
n <- dim(data)[1]
t1 <- sample(1:n, n*.8)
t2 <- setdiff(1:n, t1)
train <- subset(data[t1,])
test <- subset(data[t2,], select =- glass_name)
### 1. BASIC ###
fitControl <- trainControl(method='cv', number=10)
Grid <- expand.grid(cp=seq(0,0.1, 0.005))
#Run the training, needed to remove NAs
trained_tree <- train(glass_name ~ ., data=train, method='rpart',
trControl=fitControl, metric='Accuracy', maximize=TRUE, tuneGrid=Grid)
trained_tree
pred <- predict(trained_tree, test, type="raw")
confusionMatrix(table(pred, data[t2,]$glass_name))
plot(pred)
#Let's plot the tree with the rpart function, fancy plot wouldn't work on mac
dfit <- rpart(glass_name ~ ., data=train, control=temp, cp=trained_tree)
rpart.plot::rpart.plot(dfit)
### 2. Bagging functino ###
library(ipred)
#train$glass_name <- as.factor(train$glass_name)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=4)
#train$glass_name <- as.factor(train$glass_name)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=c(1:4))
#train$glass_name <- as.factor(train$glass_name)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=1:4)
#train$glass_name <- as.factor(train$glass_name)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=70)
print(baggedTree)
plot(baggedTree)
baggedTree
bagging.data.frame(formula = glass_name ~ ., data = train, nbagg = 70)
mod <- train(glass_name ~ ., data=train,
method="treebag",
trControl=fitControl,
metric='Accuracy',
maximize=TRUE)
print(mod)
pred <- predict(baggedTree, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
#train$glass_name <- as.factor(train$glass_name)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=50)
pred <- predict(baggedTree, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
for (i in 1:70) {print(i)}
for (i in 1:70) {
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=i)
pred <- predict(baggedTree, test)
c <- confusionMatrix(table(pred, data[t2,]$glass_name))
acc[i] <- c$overa
}
#train$glass_name <- as.factor(train$glass_name)
acc <- NULL
for (i in 1:70) {
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=i)
pred <- predict(baggedTree, test)
c <- confusionMatrix(table(pred, data[t2,]$glass_name))
acc[i] <- c$overa
}
warning()
warning()
c$overall
c$overall[1]
#train$glass_name <- as.factor(train$glass_name)
acc <- NULL
for (i in 1:70) {
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=i)
pred <- predict(baggedTree, test)
c <- confusionMatrix(table(pred, data[t2,]$glass_name))
acc[i] <- c$overall[1]
}
c$overall[1]
#train$glass_name <- as.factor(train$glass_name)
acc <- NULL
for (i in 1:70) {
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=i)
pred <- predict(baggedTree, test)
c <- confusionMatrix(table(pred, data[t2,]$glass_name))
acc[i] <- c$overall[1]
}
acc
which(max(acc) == acc, arr.ind = TRUE)
acc[18]
nbagg <- which(max(acc) == acc, arr.ind = TRUE)
nbagg <- which(max(acc) == acc, arr.ind = TRUE)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=nbagg)
pred <- predict(baggedTree, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
nbagg
nbagg <- which(max(acc) == acc, arr.ind = TRUE)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=nbagg)
pred <- predict(baggedTree, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
nbagg <- which(max(acc) == acc, arr.ind = TRUE)
baggedTree <- bagging(glass_name ~ ., data=train, nbagg=nbagg)
pred <- predict(baggedTree, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
### 3. RandomForest ###
library(randomForest)
rfModel <- randomForest(glass_name ~ ., data=train)
rfModel
control <- trainControl(method="repeatedcv", number=15, repeats=5)
metric <- 'Accuracy'
n <- round(sqrt(ncol(train)))
tuneGrid <- expand.grid(.mtry=seq(10,n,1))
n
ncol(train)
tuneGrid <- expand.grid(.mtry=seq(4,n,1))
tuneGrid <- expand.grid(.mtry=seq(1,n,1))
n
train
rf_default <- train(glass_name ~ ., data=train, method="rf",
metric=metric, tuneGrid=tuneGride, trControl=control)
rf_default <- train(glass_name ~ ., data=train, method="rf",
metric=metric, tuneGrid=tuneGrid, trControl=control)
print(rf_default)
pred <- predict(rf_default, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
library(randomForest)
control <- trainControl(method="repeatedcv", number=30, repeats=2)
metric <- 'Accuracy'
n <- round(sqrt(ncol(train)))
tuneGrid <- expand.grid(.mtry=seq(1,n,1))
rf_default <- train(glass_name ~ ., data=train, method="rf",
metric=metric, tuneGrid=tuneGrid, trControl=control)
print(rf_default)
pred <- predict(rf_default, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
control <- trainControl(method="repeatedcv", number=30, repeats=10)
metric <- 'Accuracy'
n <- round(sqrt(ncol(train)))
tuneGrid <- expand.grid(.mtry=seq(1,n,1))
rf_default <- train(glass_name ~ ., data=train, method="rf",
metric=metric, tuneGrid=tuneGrid, trControl=control)
print(rf_default)
pred <- predict(rf_default, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
ds <- read.csv("http://www.dataminingbook.info/pmwiki.php/Main/NumericDataAnalysis?action=download&upname=magic04.txt", header=FALSE)
cov
C_cov
rm(ds)
ds <- read.csv("http://www.dataminingbook.info/pmwiki.php/Main/NumericDataAnalysis?action=download&upname=magic04.txt", header=FALSE)
ds %*% ds
ds
ds <- ds[,c(1:10)]
ds %*% ds
ds
ds %*% ds
ds %*%
ds
ds[,1]
ds[,1] %*% ds[,2]
rm(ds)
data <- read.csv("http://archive.ics.uci.edu/ml/machine-learning-databases/breast-cancer-wisconsin/wdbc.data",
col.names = c("ID", "Diagnosis","radius_m","texture_m","perimeter_m","area_m",
"smoothness_m","compactness_m", "concavity_m",
"concavePoints_m","symmetry_m","fractalDimension_m",
"radius_ste","texture_ste","perimeter_ste","area_ste",
"smoothness_ste","compactness_ste", "concavity_ste",
"concavePoints_ste","symmetry_ste","fractalDimension_ste",
"radius_w","texture_w","perimeter_w","area_w",
"smoothness_w","compactness_w", "concavity_w",
"concavePoints_w","symmetry_w","fractalDimension_w"),
header=FALSE)
library(rpart)
library(caret)
data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
#Convert class num to label
data$glass_name <- "NULL"
data[data$glass == 1,]$glass_name <- "building_windows_float_processed"
data[data$glass == 2,]$glass_name <- "building_windows_non_float_processed"
data[data$glass == 3,]$glass_name <- "vehicle_windows_float_processed"
data[data$glass == 4,]$glass_name <- "vehicle_windows_non_float_processed"
data[data$glass == 5,]$glass_name <- "containers"
data[data$glass == 6,]$glass_name <- "tableware"
data[data$glass == 7,]$glass_name <- "headlamps"
data$glass_name <- as.factor(data$glass_name)
#Drop ID and the class number before we changed it
data$ID <- NULL
data$glass <- NULL
#Train/Test Split
n <- dim(data)[1]
t1 <- sample(1:n, n*.8)
t2 <- setdiff(1:n, t1)
train <- subset(data[t1,])
test <- subset(data[t2,], select =- glass_name)
### 3. RandomForest ###
library(randomForest)
control <- trainControl(method="repeatedcv", number=4, repeats=2)
metric <- 'Accuracy'
n <- round(sqrt(ncol(train)))
tuneGrid <- expand.grid(.mtry=seq(1,n,1))
rf_default <- train(glass_name ~ ., data=train, method="rf",
metric=metric, tuneGrid=tuneGrid, trControl=control)
print(rf_default)
pred <- predict(rf_default, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
### 3. RandomForest ###
library(randomForest)
control <- trainControl(method="repeatedcv", number=4, repeats=3)
metric <- 'Accuracy'
n <- round(sqrt(ncol(train)))
tuneGrid <- expand.grid(.mtry=seq(1,n,1))
rf_default <- train(glass_name ~ ., data=train, method="rf",
metric=metric, tuneGrid=tuneGrid, trControl=control)
print(rf_default)
pred <- predict(rf_default, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
?trainControl
control <- trainControl(method="repeatedcv", number=2, repeats=3)
metric <- 'Accuracy'
n <- round(sqrt(ncol(train)))
tuneGrid <- expand.grid(.mtry=seq(1,n,1))
rf_default <- train(glass_name ~ ., data=train, method="rf",
metric=metric, tuneGrid=tuneGrid, trControl=control)
print(rf_default)
pred <- predict(rf_default, test)
confusionMatrix(table(pred, data[t2,]$glass_name))
tuneGrid
sqrt(30)
sqrt(1)
sqrt(12)
sqrt(2)
1.414214*1.414214
data[c(test),]
data[test,]
getwd
getwd()
setwd("Documents/School/MSDS/github/homework/PredAnalytics/DecisionTree/")
n <- 5
matrix(1/n,n,n)
ds <- read.csv("http://www.dataminingbook.info/pmwiki.php/Main/NumericDataAnalysis?action=download&upname=magic04.txt", header=FALSE)
n <- nrow(ds)
C <- diag(n) - matrix(1/n, n, n)
C
Xc <- C %*% ds
rm(c)
rm(C)
rm(ds)
data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
#Convert class num to label
data$glass_name <- "NULL"
data[data$glass == 1,]$glass_name <- "building_windows_float_processed"
data[data$glass == 2,]$glass_name <- "building_windows_non_float_processed"
data[data$glass == 3,]$glass_name <- "vehicle_windows_float_processed"
data[data$glass == 4,]$glass_name <- "vehicle_windows_non_float_processed"
data[data$glass == 5,]$glass_name <- "containers"
data[data$glass == 6,]$glass_name <- "tableware"
data <- read.csv("https://archive.ics.uci.edu/ml/machine-learning-databases/glass/glass.data",
col.names=c("ID", "RI", "Na", "Mg", "Al","Si","K",
"Ca","Ba","Fe", "glass"))
View(data)
#Let's plot the tree with the rpart function, couldn't get fancy plot to work on mac
dfit <- rpart(glass_name ~ ., data=train, cp=trained_tree)
control=temp,
rpart.plot::rpart.plot(dfit)
#Let's plot the tree with the rpart function, couldn't get fancy plot to work on mac
dfit <- rpart(glass_name ~ ., data=train, control=temp, cp=trained_tree)
View(temp)
